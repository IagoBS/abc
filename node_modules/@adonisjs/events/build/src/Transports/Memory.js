"use strict";
/*
* @adonisjs/events
*
* (c) Harminder Virk <virk@adonisjs.com>
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.MemoryTransport = void 0;
/**
 * Memory transparent adheres to the [[EmitterTransportContract]] to keep
 * emitted events with memory, that can be used later for tests assertions.
 */
class MemoryTransport {
    constructor() {
        this.events = [];
    }
    async emit(event, data) {
        this.events.push({ event, data });
    }
    on(_, __) {
    }
    async once(_) {
    }
    onAny(__) {
    }
    _off(_, __) {
    }
    offAny(__) {
    }
    off(_, __) {
    }
    clearListeners(_) {
    }
    listenerCount(_) {
        return 0;
    }
}
exports.MemoryTransport = MemoryTransport;
