/// <reference path="../../adonis-typings/events.d.ts" />
import { EmitterTransportContract, EventHandler, AnyHandler } from '@ioc:Adonis/Core/Event';
/**
 * Memory transparent adheres to the [[EmitterTransportContract]] to keep
 * emitted events with memory, that can be used later for tests assertions.
 */
export declare class MemoryTransport implements EmitterTransportContract {
    events: {
        event: string;
        data: any;
    }[];
    emit(event: string, data: any): Promise<void>;
    on(_: string, __: EventHandler): void;
    once(_: string): Promise<void>;
    onAny(__: AnyHandler): void;
    _off(_: string, __: EventHandler): void;
    offAny(__: AnyHandler): void;
    off(_: string, __: EventHandler): void;
    clearListeners(_: string): void;
    listenerCount(_: string): number;
}
