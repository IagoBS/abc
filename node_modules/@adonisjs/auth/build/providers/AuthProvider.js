"use strict";
/*
* @adonisjs/auth
*
* (c) Harminder Virk <virk@adonisjs.com>
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const AuthManager_1 = require("../src/AuthManager");
/**
 * Auth provider to register the auth binding
 */
class AuthProvider {
    constructor(container) {
        this.container = container;
    }
    /**
     * Register auth binding
     */
    register() {
        this.container.singleton('Adonis/Addons/Auth', () => {
            const authConfig = this.container.use('Adonis/Core/Config').get('auth');
            return new AuthManager_1.AuthManager(this.container, authConfig);
        });
    }
    /**
     * Hook into boot to register auth macro
     */
    async boot() {
        this.container.with(['Adonis/Core/HttpContext', 'Adonis/Addons/Auth'], (HttpContext, Auth) => {
            HttpContext.getter('auth', function auth() {
                return Auth.getAuthForRequest(this);
            }, true);
        });
        this.container.with(['Adonis/Core/Server', 'Adonis/Core/View'], (Server) => {
            Server.hooks.before(async (ctx) => {
                ctx['view'].share({ auth: ctx.auth });
            });
        });
    }
}
exports.default = AuthProvider;
